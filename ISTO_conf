kubectl apply -n my-namespace -f - <<EOF

apiVersion: v1
kind: Service
metadata:
  name: service-a
spec:
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-a
  template:
    metadata:
      labels:
        app: service-a
    spec:
      containers:
      - name: service-a
        image: your-service-a-image
EOF



**********************************

kubectl apply -n my-namespace -f - <<EOF
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: my-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE # You can also use ISTIO_MUTUAL for mTLS
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: my-virtualservice
spec:
  hosts:
  - "*"
  gateways:
  - my-gateway
  http:
  - route:
    - destination:
        host: service-a.my-namespace.svc.cluster.local # Service's FQDN
        port:
          number: 80
EOF
-----------------------

kubectl apply -n my-namespace -f - <<EOF
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: default
spec:
  egress:
  - hosts:
    - "*"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-b
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
EOF
-----------------------------------
